import functools
from tkinter import Tk, Canvas, mainloop, NW
from PIL import Image, ImageTk
import time

# размер карты в пикселях
window_width = 600
window_height = 600

# карта
game_map = [
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1],
    [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1],
    [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1],
    [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1],
    [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
]

# размеры блока
block_width = window_width // 12
block_height = window_height // 12

# создаем холст
tk = Tk()
c = Canvas(tk, width=window_width, height=window_height, bg='white')
c.pack()

# картинки со стеной и травой
brick = ImageTk.PhotoImage((Image.open("images/brick.jpg").resize((block_width, block_height))))
grass = ImageTk.PhotoImage((Image.open("images/grass.jpg").resize((block_width, block_height))))

# рисуем карту
for i in range(12):
    for j in range(12):
        if game_map[i][j] == 0:
            c.create_image(i * block_width, j * block_height, image=grass, anchor=NW)
        if game_map[i][j] == 1:
            c.create_image(i * block_width, j * block_height, image=brick, anchor=NW)

# картинка с игроком
player_image_up = ImageTk.PhotoImage(
    (Image.open("images/tank.gif").convert('RGBA').resize((block_width, block_height))))
player_image_left = ImageTk.PhotoImage(
    (Image.open("images/tank.gif").convert('RGBA').resize((block_width, block_height)).rotate(90)))
player_image_down = ImageTk.PhotoImage(
    (Image.open("images/tank.gif").convert('RGBA').resize((block_width, block_height)).rotate(180)))
player_image_right = ImageTk.PhotoImage(
    (Image.open("images/tank.gif").convert('RGBA').resize((block_width, block_height)).rotate(270)))

bullet_image_up = ImageTk.PhotoImage(
    (Image.open("images/bullet.gif").convert('RGBA').resize((block_width, block_height))))
bullet_image_left = ImageTk.PhotoImage(
    (Image.open("images/bullet.gif").convert('RGBA').resize((block_width, block_height)).rotate(90)))
bullet_image_down = ImageTk.PhotoImage(
    (Image.open("images/bullet.gif").convert('RGBA').resize((block_width, block_height)).rotate(180)))
bullet_image_right = ImageTk.PhotoImage(
    (Image.open("images/bullet.gif").convert('RGBA').resize((block_width, block_height)).rotate(270)))

boom_image_up = ImageTk.PhotoImage(
    (Image.open("images/boom.png").convert('RGBA').resize((block_width, block_height))))
boom_image_left = ImageTk.PhotoImage(
    (Image.open("images/boom.png").convert('RGBA').resize((block_width, block_height)).rotate(90)))
boom_image_down = ImageTk.PhotoImage(
    (Image.open("images/boom.png").convert('RGBA').resize((block_width, block_height)).rotate(180)))
boom_image_right = ImageTk.PhotoImage(
    (Image.open("images/boom.png").convert('RGBA').resize((block_width, block_height)).rotate(270)))

boom2_image = ImageTk.PhotoImage(
    (Image.open("images/boom2.png").convert('RGBA').resize((block_width, block_height))))

# координаты игрока
x = 6
y = 6

# создаем игрока
player_up = c.create_image(x * block_width, y * block_height, image=player_image_up, anchor=NW)
player_left = c.create_image(x * block_width, y * block_height, image=player_image_left, anchor=NW)
player_down = c.create_image(x * block_width, y * block_height, image=player_image_down, anchor=NW)
player_right = c.create_image(x * block_width, y * block_height, image=player_image_right, anchor=NW)

c.itemconfigure(player_left, state='normal')
c.itemconfigure(player_up, state='hidden')
c.itemconfigure(player_down, state='hidden')
c.itemconfigure(player_right, state='hidden')


# проверка доступности клетки
def is_available(i, j):
    if i < 0 or i >= 12 or j < 0 or j >= 12:
        return False
    if game_map[i][j] == 1:
        return False
    return True


bullets = []
fires = []

def moveBullets():
    global bullets

    for fire in fires:
        if fire["time"] - time.time() <= -0.25:
            fires.remove(fire)
            c.delete(fire["object"])

    aliveBullets = []

    player_x, player_y = c.coords(player_left)
    player_mx, player_my = int(player_x // block_width), int(player_y // block_height)

    for bullet in bullets:
        x, y = c.coords(bullet['object'])
        mx, my = int(x // block_width), int(y // block_height)

        if (mx, my) == (player_mx, player_my):
            boom2 = c.create_image(mx * block_width, my * block_height, image=boom2_image, anchor=NW)
            fires.append({
                "object": boom2,
                "time": time.time()
            })
        if bullet['side'] == 'LEFT':
            c.move(bullet['object'], -10, 0)
        if bullet['side'] == 'RIGHT':
            c.move(bullet['object'], 10, 0)
        if bullet['side'] == 'UP':
            c.move(bullet['object'], 0, -10)
        if bullet['side'] == 'DOWN':
            c.move(bullet['object'], 0, 10)
        if not is_available(mx, my) or (bullet['side']=='RIGHT' and not is_available(mx+1, my))or (bullet['side']=='DOWN' and not is_available(mx, my+1)):
            if bullet['side'] == 'DOWN' and not is_available(mx, my+1):
                boom = c.create_image(mx * block_width, my * block_height, image=boom_image_up, anchor=NW)
            if bullet['side'] == 'LEFT' and not is_available(mx, my):
                boom = c.create_image((mx+1) * block_width, my * block_height, image=boom_image_left, anchor=NW)
            if bullet['side'] == 'UP' and not is_available(mx, my):
                boom = c.create_image(mx * block_width, (my+1) * block_height, image=boom_image_up, anchor=NW)
            if bullet['side'] == 'RIGHT' and not is_available(mx+1, my):
                boom = c.create_image(mx * block_width, my * block_height, image=boom_image_right, anchor=NW)

            fires.append({
                "object": boom,
                "time": time.time()
            })
            c.delete(bullet['object'])
            continue
        aliveBullets.append(bullet)
    bullets = aliveBullets
    c.after(50, moveBullets)



naprav = 'a'


# нажатие клавиши
def keyDown(key):
    global x, y, naprav
    if key.char == 'a':
        c.itemconfigure(player_left, state='normal')
        c.itemconfigure(player_up, state='hidden')
        c.itemconfigure(player_down, state='hidden')
        c.itemconfigure(player_right, state='hidden')
        naprav = 'a'
        if is_available(x - 1, y):
            x -= 1
    if key.char == 'd':
        c.itemconfigure(player_left, state='hidden')
        c.itemconfigure(player_up, state='hidden')
        c.itemconfigure(player_down, state='hidden')
        c.itemconfigure(player_right, state='normal')
        naprav = 'd'
        if is_available(x + 1, y):
            x += 1
    if key.char == 'w':
        c.itemconfigure(player_left, state='hidden')
        c.itemconfigure(player_up, state='normal')
        c.itemconfigure(player_down, state='hidden')
        c.itemconfigure(player_right, state='hidden')
        naprav = 'w'
        if is_available(x, y - 1):
            y -= 1
    if key.char == 's':
        c.itemconfigure(player_left, state='hidden')
        c.itemconfigure(player_up, state='hidden')
        c.itemconfigure(player_right, state='hidden')
        c.itemconfigure(player_down, state='normal')
        naprav = 's'
        if is_available(x, y + 1):
            y += 1
    if key.char == ' ':
        if naprav == 'a':
            bullet = {
                "object": c.create_image(x * block_width - block_width, y * block_height, image=bullet_image_left, anchor=NW),
                "side": "LEFT"
            }
            bullets.append(bullet)
        if naprav == 'd':
            bullet = {
                "object": c.create_image(x * block_width + block_width, y * block_height, image=bullet_image_right, anchor=NW),
                "side": "RIGHT"
            }
            bullets.append(bullet)
        if naprav == 'w':
            bullet = {
                "object": c.create_image(x * block_width, y * block_height - block_height, image=bullet_image_up, anchor=NW),
                "side": "UP"
            }
            bullets.append(bullet)
        if naprav == 's':
            bullet = {
                "object": c.create_image(x * block_width, y * block_height + block_height, image=bullet_image_down, anchor=NW),
                "side": "DOWN"
            }
            bullets.append(bullet)
    c.coords(player_up, x * block_width, y * block_height)
    c.coords(player_left, x * block_width, y * block_height)
    c.coords(player_down, x * block_width, y * block_height)
    c.coords(player_right, x * block_width, y * block_height)


# при нажатии любой клавишы вызываем keyDown
tk.bind("<KeyPress>", keyDown)
c.after(50, moveBullets)
mainloop()
